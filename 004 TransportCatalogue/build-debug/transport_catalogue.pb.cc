// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: transport_catalogue.proto

#include "transport_catalogue.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace transport_catalogue_proto {
PROTOBUF_CONSTEXPR Coordinates::Coordinates(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.latitude_)*/0
  , /*decltype(_impl_.longitude_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CoordinatesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CoordinatesDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CoordinatesDefaultTypeInternal() {}
  union {
    Coordinates _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CoordinatesDefaultTypeInternal _Coordinates_default_instance_;
PROTOBUF_CONSTEXPR Stop::Stop(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.position_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StopDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StopDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StopDefaultTypeInternal() {}
  union {
    Stop _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StopDefaultTypeInternal _Stop_default_instance_;
PROTOBUF_CONSTEXPR Bus::Bus(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.stops_)*/{}
  , /*decltype(_impl_._stops_cached_byte_size_)*/{0}
  , /*decltype(_impl_.endpoints_)*/{}
  , /*decltype(_impl_._endpoints_cached_byte_size_)*/{0}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BusDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BusDefaultTypeInternal() {}
  union {
    Bus _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BusDefaultTypeInternal _Bus_default_instance_;
PROTOBUF_CONSTEXPR StopDistanceItem::StopDistanceItem(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.from_)*/0u
  , /*decltype(_impl_.to_)*/0u
  , /*decltype(_impl_.distance_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StopDistanceItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StopDistanceItemDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StopDistanceItemDefaultTypeInternal() {}
  union {
    StopDistanceItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StopDistanceItemDefaultTypeInternal _StopDistanceItem_default_instance_;
PROTOBUF_CONSTEXPR Catalogue::Catalogue(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.stops_)*/{}
  , /*decltype(_impl_.buses_)*/{}
  , /*decltype(_impl_.stop_distances_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CatalogueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CatalogueDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CatalogueDefaultTypeInternal() {}
  union {
    Catalogue _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CatalogueDefaultTypeInternal _Catalogue_default_instance_;
PROTOBUF_CONSTEXPR TransportCatalogue::TransportCatalogue(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.catalogue_)*/nullptr
  , /*decltype(_impl_.renderer_)*/nullptr
  , /*decltype(_impl_.router_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TransportCatalogueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransportCatalogueDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransportCatalogueDefaultTypeInternal() {}
  union {
    TransportCatalogue _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransportCatalogueDefaultTypeInternal _TransportCatalogue_default_instance_;
}  // namespace transport_catalogue_proto
static ::_pb::Metadata file_level_metadata_transport_5fcatalogue_2eproto[6];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_transport_5fcatalogue_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_transport_5fcatalogue_2eproto = nullptr;

const uint32_t TableStruct_transport_5fcatalogue_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::transport_catalogue_proto::Coordinates, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::transport_catalogue_proto::Coordinates, _impl_.latitude_),
  PROTOBUF_FIELD_OFFSET(::transport_catalogue_proto::Coordinates, _impl_.longitude_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::transport_catalogue_proto::Stop, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::transport_catalogue_proto::Stop, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::transport_catalogue_proto::Stop, _impl_.position_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::transport_catalogue_proto::Bus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::transport_catalogue_proto::Bus, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::transport_catalogue_proto::Bus, _impl_.stops_),
  PROTOBUF_FIELD_OFFSET(::transport_catalogue_proto::Bus, _impl_.endpoints_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::transport_catalogue_proto::StopDistanceItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::transport_catalogue_proto::StopDistanceItem, _impl_.from_),
  PROTOBUF_FIELD_OFFSET(::transport_catalogue_proto::StopDistanceItem, _impl_.to_),
  PROTOBUF_FIELD_OFFSET(::transport_catalogue_proto::StopDistanceItem, _impl_.distance_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::transport_catalogue_proto::Catalogue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::transport_catalogue_proto::Catalogue, _impl_.stops_),
  PROTOBUF_FIELD_OFFSET(::transport_catalogue_proto::Catalogue, _impl_.buses_),
  PROTOBUF_FIELD_OFFSET(::transport_catalogue_proto::Catalogue, _impl_.stop_distances_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::transport_catalogue_proto::TransportCatalogue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::transport_catalogue_proto::TransportCatalogue, _impl_.catalogue_),
  PROTOBUF_FIELD_OFFSET(::transport_catalogue_proto::TransportCatalogue, _impl_.renderer_),
  PROTOBUF_FIELD_OFFSET(::transport_catalogue_proto::TransportCatalogue, _impl_.router_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::transport_catalogue_proto::Coordinates)},
  { 8, -1, -1, sizeof(::transport_catalogue_proto::Stop)},
  { 16, -1, -1, sizeof(::transport_catalogue_proto::Bus)},
  { 25, -1, -1, sizeof(::transport_catalogue_proto::StopDistanceItem)},
  { 34, -1, -1, sizeof(::transport_catalogue_proto::Catalogue)},
  { 43, -1, -1, sizeof(::transport_catalogue_proto::TransportCatalogue)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::transport_catalogue_proto::_Coordinates_default_instance_._instance,
  &::transport_catalogue_proto::_Stop_default_instance_._instance,
  &::transport_catalogue_proto::_Bus_default_instance_._instance,
  &::transport_catalogue_proto::_StopDistanceItem_default_instance_._instance,
  &::transport_catalogue_proto::_Catalogue_default_instance_._instance,
  &::transport_catalogue_proto::_TransportCatalogue_default_instance_._instance,
};

const char descriptor_table_protodef_transport_5fcatalogue_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\031transport_catalogue.proto\022\031transport_c"
  "atalogue_proto\032\022map_renderer.proto\032\026tran"
  "sport_router.proto\"2\n\013Coordinates\022\020\n\010lat"
  "itude\030\001 \001(\001\022\021\n\tlongitude\030\002 \001(\001\"N\n\004Stop\022\014"
  "\n\004name\030\001 \001(\t\0228\n\010position\030\002 \001(\0132&.transpo"
  "rt_catalogue_proto.Coordinates\"5\n\003Bus\022\014\n"
  "\004name\030\001 \001(\t\022\r\n\005stops\030\002 \003(\r\022\021\n\tendpoints\030"
  "\003 \003(\r\">\n\020StopDistanceItem\022\014\n\004from\030\001 \001(\r\022"
  "\n\n\002to\030\002 \001(\r\022\020\n\010distance\030\003 \001(\005\"\257\001\n\tCatalo"
  "gue\022.\n\005stops\030\001 \003(\0132\037.transport_catalogue"
  "_proto.Stop\022-\n\005buses\030\002 \003(\0132\036.transport_c"
  "atalogue_proto.Bus\022C\n\016stop_distances\030\003 \003"
  "(\0132+.transport_catalogue_proto.StopDista"
  "nceItem\"\303\001\n\022TransportCatalogue\0227\n\tcatalo"
  "gue\030\001 \001(\0132$.transport_catalogue_proto.Ca"
  "talogue\0228\n\010renderer\030\002 \001(\0132&.transport_ca"
  "talogue_proto.MapRenderer\022:\n\006router\030\003 \001("
  "\0132*.transport_catalogue_proto.TransportR"
  "outerb\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_transport_5fcatalogue_2eproto_deps[2] = {
  &::descriptor_table_map_5frenderer_2eproto,
  &::descriptor_table_transport_5frouter_2eproto,
};
static ::_pbi::once_flag descriptor_table_transport_5fcatalogue_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_transport_5fcatalogue_2eproto = {
    false, false, 733, descriptor_table_protodef_transport_5fcatalogue_2eproto,
    "transport_catalogue.proto",
    &descriptor_table_transport_5fcatalogue_2eproto_once, descriptor_table_transport_5fcatalogue_2eproto_deps, 2, 6,
    schemas, file_default_instances, TableStruct_transport_5fcatalogue_2eproto::offsets,
    file_level_metadata_transport_5fcatalogue_2eproto, file_level_enum_descriptors_transport_5fcatalogue_2eproto,
    file_level_service_descriptors_transport_5fcatalogue_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_transport_5fcatalogue_2eproto_getter() {
  return &descriptor_table_transport_5fcatalogue_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_transport_5fcatalogue_2eproto(&descriptor_table_transport_5fcatalogue_2eproto);
namespace transport_catalogue_proto {

// ===================================================================

class Coordinates::_Internal {
 public:
};

Coordinates::Coordinates(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:transport_catalogue_proto.Coordinates)
}
Coordinates::Coordinates(const Coordinates& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Coordinates* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.latitude_){}
    , decltype(_impl_.longitude_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.latitude_, &from._impl_.latitude_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.longitude_) -
    reinterpret_cast<char*>(&_impl_.latitude_)) + sizeof(_impl_.longitude_));
  // @@protoc_insertion_point(copy_constructor:transport_catalogue_proto.Coordinates)
}

inline void Coordinates::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.latitude_){0}
    , decltype(_impl_.longitude_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Coordinates::~Coordinates() {
  // @@protoc_insertion_point(destructor:transport_catalogue_proto.Coordinates)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Coordinates::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Coordinates::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Coordinates::Clear() {
// @@protoc_insertion_point(message_clear_start:transport_catalogue_proto.Coordinates)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.latitude_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.longitude_) -
      reinterpret_cast<char*>(&_impl_.latitude_)) + sizeof(_impl_.longitude_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Coordinates::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // double latitude = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 9)) {
          _impl_.latitude_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // double longitude = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 17)) {
          _impl_.longitude_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Coordinates::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:transport_catalogue_proto.Coordinates)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // double latitude = 1;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_latitude = this->_internal_latitude();
  uint64_t raw_latitude;
  memcpy(&raw_latitude, &tmp_latitude, sizeof(tmp_latitude));
  if (raw_latitude != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(1, this->_internal_latitude(), target);
  }

  // double longitude = 2;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_longitude = this->_internal_longitude();
  uint64_t raw_longitude;
  memcpy(&raw_longitude, &tmp_longitude, sizeof(tmp_longitude));
  if (raw_longitude != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(2, this->_internal_longitude(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:transport_catalogue_proto.Coordinates)
  return target;
}

size_t Coordinates::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:transport_catalogue_proto.Coordinates)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double latitude = 1;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_latitude = this->_internal_latitude();
  uint64_t raw_latitude;
  memcpy(&raw_latitude, &tmp_latitude, sizeof(tmp_latitude));
  if (raw_latitude != 0) {
    total_size += 1 + 8;
  }

  // double longitude = 2;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_longitude = this->_internal_longitude();
  uint64_t raw_longitude;
  memcpy(&raw_longitude, &tmp_longitude, sizeof(tmp_longitude));
  if (raw_longitude != 0) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Coordinates::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Coordinates::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Coordinates::GetClassData() const { return &_class_data_; }


void Coordinates::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Coordinates*>(&to_msg);
  auto& from = static_cast<const Coordinates&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:transport_catalogue_proto.Coordinates)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_latitude = from._internal_latitude();
  uint64_t raw_latitude;
  memcpy(&raw_latitude, &tmp_latitude, sizeof(tmp_latitude));
  if (raw_latitude != 0) {
    _this->_internal_set_latitude(from._internal_latitude());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_longitude = from._internal_longitude();
  uint64_t raw_longitude;
  memcpy(&raw_longitude, &tmp_longitude, sizeof(tmp_longitude));
  if (raw_longitude != 0) {
    _this->_internal_set_longitude(from._internal_longitude());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Coordinates::CopyFrom(const Coordinates& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:transport_catalogue_proto.Coordinates)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Coordinates::IsInitialized() const {
  return true;
}

void Coordinates::InternalSwap(Coordinates* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Coordinates, _impl_.longitude_)
      + sizeof(Coordinates::_impl_.longitude_)
      - PROTOBUF_FIELD_OFFSET(Coordinates, _impl_.latitude_)>(
          reinterpret_cast<char*>(&_impl_.latitude_),
          reinterpret_cast<char*>(&other->_impl_.latitude_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Coordinates::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_transport_5fcatalogue_2eproto_getter, &descriptor_table_transport_5fcatalogue_2eproto_once,
      file_level_metadata_transport_5fcatalogue_2eproto[0]);
}

// ===================================================================

class Stop::_Internal {
 public:
  static const ::transport_catalogue_proto::Coordinates& position(const Stop* msg);
};

const ::transport_catalogue_proto::Coordinates&
Stop::_Internal::position(const Stop* msg) {
  return *msg->_impl_.position_;
}
Stop::Stop(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:transport_catalogue_proto.Stop)
}
Stop::Stop(const Stop& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Stop* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.position_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_position()) {
    _this->_impl_.position_ = new ::transport_catalogue_proto::Coordinates(*from._impl_.position_);
  }
  // @@protoc_insertion_point(copy_constructor:transport_catalogue_proto.Stop)
}

inline void Stop::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.position_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Stop::~Stop() {
  // @@protoc_insertion_point(destructor:transport_catalogue_proto.Stop)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Stop::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  if (this != internal_default_instance()) delete _impl_.position_;
}

void Stop::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Stop::Clear() {
// @@protoc_insertion_point(message_clear_start:transport_catalogue_proto.Stop)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.position_ != nullptr) {
    delete _impl_.position_;
  }
  _impl_.position_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Stop::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "transport_catalogue_proto.Stop.name"));
        } else
          goto handle_unusual;
        continue;
      // .transport_catalogue_proto.Coordinates position = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_position(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Stop::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:transport_catalogue_proto.Stop)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "transport_catalogue_proto.Stop.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .transport_catalogue_proto.Coordinates position = 2;
  if (this->_internal_has_position()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::position(this),
        _Internal::position(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:transport_catalogue_proto.Stop)
  return target;
}

size_t Stop::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:transport_catalogue_proto.Stop)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .transport_catalogue_proto.Coordinates position = 2;
  if (this->_internal_has_position()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.position_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Stop::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Stop::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Stop::GetClassData() const { return &_class_data_; }


void Stop::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Stop*>(&to_msg);
  auto& from = static_cast<const Stop&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:transport_catalogue_proto.Stop)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_has_position()) {
    _this->_internal_mutable_position()->::transport_catalogue_proto::Coordinates::MergeFrom(
        from._internal_position());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Stop::CopyFrom(const Stop& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:transport_catalogue_proto.Stop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stop::IsInitialized() const {
  return true;
}

void Stop::InternalSwap(Stop* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  swap(_impl_.position_, other->_impl_.position_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Stop::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_transport_5fcatalogue_2eproto_getter, &descriptor_table_transport_5fcatalogue_2eproto_once,
      file_level_metadata_transport_5fcatalogue_2eproto[1]);
}

// ===================================================================

class Bus::_Internal {
 public:
};

Bus::Bus(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:transport_catalogue_proto.Bus)
}
Bus::Bus(const Bus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Bus* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.stops_){from._impl_.stops_}
    , /*decltype(_impl_._stops_cached_byte_size_)*/{0}
    , decltype(_impl_.endpoints_){from._impl_.endpoints_}
    , /*decltype(_impl_._endpoints_cached_byte_size_)*/{0}
    , decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:transport_catalogue_proto.Bus)
}

inline void Bus::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.stops_){arena}
    , /*decltype(_impl_._stops_cached_byte_size_)*/{0}
    , decltype(_impl_.endpoints_){arena}
    , /*decltype(_impl_._endpoints_cached_byte_size_)*/{0}
    , decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Bus::~Bus() {
  // @@protoc_insertion_point(destructor:transport_catalogue_proto.Bus)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Bus::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.stops_.~RepeatedField();
  _impl_.endpoints_.~RepeatedField();
  _impl_.name_.Destroy();
}

void Bus::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Bus::Clear() {
// @@protoc_insertion_point(message_clear_start:transport_catalogue_proto.Bus)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.stops_.Clear();
  _impl_.endpoints_.Clear();
  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Bus::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "transport_catalogue_proto.Bus.name"));
        } else
          goto handle_unusual;
        continue;
      // repeated uint32 stops = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_stops(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          _internal_add_stops(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated uint32 endpoints = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_endpoints(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 24) {
          _internal_add_endpoints(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Bus::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:transport_catalogue_proto.Bus)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "transport_catalogue_proto.Bus.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // repeated uint32 stops = 2;
  {
    int byte_size = _impl_._stops_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          2, _internal_stops(), byte_size, target);
    }
  }

  // repeated uint32 endpoints = 3;
  {
    int byte_size = _impl_._endpoints_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          3, _internal_endpoints(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:transport_catalogue_proto.Bus)
  return target;
}

size_t Bus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:transport_catalogue_proto.Bus)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 stops = 2;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      UInt32Size(this->_impl_.stops_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._stops_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated uint32 endpoints = 3;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      UInt32Size(this->_impl_.endpoints_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._endpoints_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Bus::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Bus::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Bus::GetClassData() const { return &_class_data_; }


void Bus::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Bus*>(&to_msg);
  auto& from = static_cast<const Bus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:transport_catalogue_proto.Bus)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.stops_.MergeFrom(from._impl_.stops_);
  _this->_impl_.endpoints_.MergeFrom(from._impl_.endpoints_);
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Bus::CopyFrom(const Bus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:transport_catalogue_proto.Bus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Bus::IsInitialized() const {
  return true;
}

void Bus::InternalSwap(Bus* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.stops_.InternalSwap(&other->_impl_.stops_);
  _impl_.endpoints_.InternalSwap(&other->_impl_.endpoints_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Bus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_transport_5fcatalogue_2eproto_getter, &descriptor_table_transport_5fcatalogue_2eproto_once,
      file_level_metadata_transport_5fcatalogue_2eproto[2]);
}

// ===================================================================

class StopDistanceItem::_Internal {
 public:
};

StopDistanceItem::StopDistanceItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:transport_catalogue_proto.StopDistanceItem)
}
StopDistanceItem::StopDistanceItem(const StopDistanceItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StopDistanceItem* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.from_){}
    , decltype(_impl_.to_){}
    , decltype(_impl_.distance_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.from_, &from._impl_.from_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.distance_) -
    reinterpret_cast<char*>(&_impl_.from_)) + sizeof(_impl_.distance_));
  // @@protoc_insertion_point(copy_constructor:transport_catalogue_proto.StopDistanceItem)
}

inline void StopDistanceItem::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.from_){0u}
    , decltype(_impl_.to_){0u}
    , decltype(_impl_.distance_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

StopDistanceItem::~StopDistanceItem() {
  // @@protoc_insertion_point(destructor:transport_catalogue_proto.StopDistanceItem)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StopDistanceItem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void StopDistanceItem::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StopDistanceItem::Clear() {
// @@protoc_insertion_point(message_clear_start:transport_catalogue_proto.StopDistanceItem)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.from_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.distance_) -
      reinterpret_cast<char*>(&_impl_.from_)) + sizeof(_impl_.distance_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StopDistanceItem::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 from = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.from_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 to = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.to_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 distance = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.distance_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StopDistanceItem::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:transport_catalogue_proto.StopDistanceItem)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 from = 1;
  if (this->_internal_from() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_from(), target);
  }

  // uint32 to = 2;
  if (this->_internal_to() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_to(), target);
  }

  // int32 distance = 3;
  if (this->_internal_distance() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_distance(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:transport_catalogue_proto.StopDistanceItem)
  return target;
}

size_t StopDistanceItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:transport_catalogue_proto.StopDistanceItem)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 from = 1;
  if (this->_internal_from() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_from());
  }

  // uint32 to = 2;
  if (this->_internal_to() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_to());
  }

  // int32 distance = 3;
  if (this->_internal_distance() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_distance());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StopDistanceItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StopDistanceItem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StopDistanceItem::GetClassData() const { return &_class_data_; }


void StopDistanceItem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StopDistanceItem*>(&to_msg);
  auto& from = static_cast<const StopDistanceItem&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:transport_catalogue_proto.StopDistanceItem)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_from() != 0) {
    _this->_internal_set_from(from._internal_from());
  }
  if (from._internal_to() != 0) {
    _this->_internal_set_to(from._internal_to());
  }
  if (from._internal_distance() != 0) {
    _this->_internal_set_distance(from._internal_distance());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StopDistanceItem::CopyFrom(const StopDistanceItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:transport_catalogue_proto.StopDistanceItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopDistanceItem::IsInitialized() const {
  return true;
}

void StopDistanceItem::InternalSwap(StopDistanceItem* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StopDistanceItem, _impl_.distance_)
      + sizeof(StopDistanceItem::_impl_.distance_)
      - PROTOBUF_FIELD_OFFSET(StopDistanceItem, _impl_.from_)>(
          reinterpret_cast<char*>(&_impl_.from_),
          reinterpret_cast<char*>(&other->_impl_.from_));
}

::PROTOBUF_NAMESPACE_ID::Metadata StopDistanceItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_transport_5fcatalogue_2eproto_getter, &descriptor_table_transport_5fcatalogue_2eproto_once,
      file_level_metadata_transport_5fcatalogue_2eproto[3]);
}

// ===================================================================

class Catalogue::_Internal {
 public:
};

Catalogue::Catalogue(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:transport_catalogue_proto.Catalogue)
}
Catalogue::Catalogue(const Catalogue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Catalogue* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.stops_){from._impl_.stops_}
    , decltype(_impl_.buses_){from._impl_.buses_}
    , decltype(_impl_.stop_distances_){from._impl_.stop_distances_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:transport_catalogue_proto.Catalogue)
}

inline void Catalogue::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.stops_){arena}
    , decltype(_impl_.buses_){arena}
    , decltype(_impl_.stop_distances_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Catalogue::~Catalogue() {
  // @@protoc_insertion_point(destructor:transport_catalogue_proto.Catalogue)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Catalogue::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.stops_.~RepeatedPtrField();
  _impl_.buses_.~RepeatedPtrField();
  _impl_.stop_distances_.~RepeatedPtrField();
}

void Catalogue::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Catalogue::Clear() {
// @@protoc_insertion_point(message_clear_start:transport_catalogue_proto.Catalogue)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.stops_.Clear();
  _impl_.buses_.Clear();
  _impl_.stop_distances_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Catalogue::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .transport_catalogue_proto.Stop stops = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_stops(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .transport_catalogue_proto.Bus buses = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_buses(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .transport_catalogue_proto.StopDistanceItem stop_distances = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_stop_distances(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Catalogue::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:transport_catalogue_proto.Catalogue)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .transport_catalogue_proto.Stop stops = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_stops_size()); i < n; i++) {
    const auto& repfield = this->_internal_stops(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .transport_catalogue_proto.Bus buses = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_buses_size()); i < n; i++) {
    const auto& repfield = this->_internal_buses(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .transport_catalogue_proto.StopDistanceItem stop_distances = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_stop_distances_size()); i < n; i++) {
    const auto& repfield = this->_internal_stop_distances(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:transport_catalogue_proto.Catalogue)
  return target;
}

size_t Catalogue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:transport_catalogue_proto.Catalogue)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .transport_catalogue_proto.Stop stops = 1;
  total_size += 1UL * this->_internal_stops_size();
  for (const auto& msg : this->_impl_.stops_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .transport_catalogue_proto.Bus buses = 2;
  total_size += 1UL * this->_internal_buses_size();
  for (const auto& msg : this->_impl_.buses_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .transport_catalogue_proto.StopDistanceItem stop_distances = 3;
  total_size += 1UL * this->_internal_stop_distances_size();
  for (const auto& msg : this->_impl_.stop_distances_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Catalogue::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Catalogue::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Catalogue::GetClassData() const { return &_class_data_; }


void Catalogue::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Catalogue*>(&to_msg);
  auto& from = static_cast<const Catalogue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:transport_catalogue_proto.Catalogue)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.stops_.MergeFrom(from._impl_.stops_);
  _this->_impl_.buses_.MergeFrom(from._impl_.buses_);
  _this->_impl_.stop_distances_.MergeFrom(from._impl_.stop_distances_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Catalogue::CopyFrom(const Catalogue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:transport_catalogue_proto.Catalogue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Catalogue::IsInitialized() const {
  return true;
}

void Catalogue::InternalSwap(Catalogue* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.stops_.InternalSwap(&other->_impl_.stops_);
  _impl_.buses_.InternalSwap(&other->_impl_.buses_);
  _impl_.stop_distances_.InternalSwap(&other->_impl_.stop_distances_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Catalogue::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_transport_5fcatalogue_2eproto_getter, &descriptor_table_transport_5fcatalogue_2eproto_once,
      file_level_metadata_transport_5fcatalogue_2eproto[4]);
}

// ===================================================================

class TransportCatalogue::_Internal {
 public:
  static const ::transport_catalogue_proto::Catalogue& catalogue(const TransportCatalogue* msg);
  static const ::transport_catalogue_proto::MapRenderer& renderer(const TransportCatalogue* msg);
  static const ::transport_catalogue_proto::TransportRouter& router(const TransportCatalogue* msg);
};

const ::transport_catalogue_proto::Catalogue&
TransportCatalogue::_Internal::catalogue(const TransportCatalogue* msg) {
  return *msg->_impl_.catalogue_;
}
const ::transport_catalogue_proto::MapRenderer&
TransportCatalogue::_Internal::renderer(const TransportCatalogue* msg) {
  return *msg->_impl_.renderer_;
}
const ::transport_catalogue_proto::TransportRouter&
TransportCatalogue::_Internal::router(const TransportCatalogue* msg) {
  return *msg->_impl_.router_;
}
void TransportCatalogue::clear_renderer() {
  if (GetArenaForAllocation() == nullptr && _impl_.renderer_ != nullptr) {
    delete _impl_.renderer_;
  }
  _impl_.renderer_ = nullptr;
}
void TransportCatalogue::clear_router() {
  if (GetArenaForAllocation() == nullptr && _impl_.router_ != nullptr) {
    delete _impl_.router_;
  }
  _impl_.router_ = nullptr;
}
TransportCatalogue::TransportCatalogue(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:transport_catalogue_proto.TransportCatalogue)
}
TransportCatalogue::TransportCatalogue(const TransportCatalogue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TransportCatalogue* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.catalogue_){nullptr}
    , decltype(_impl_.renderer_){nullptr}
    , decltype(_impl_.router_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_catalogue()) {
    _this->_impl_.catalogue_ = new ::transport_catalogue_proto::Catalogue(*from._impl_.catalogue_);
  }
  if (from._internal_has_renderer()) {
    _this->_impl_.renderer_ = new ::transport_catalogue_proto::MapRenderer(*from._impl_.renderer_);
  }
  if (from._internal_has_router()) {
    _this->_impl_.router_ = new ::transport_catalogue_proto::TransportRouter(*from._impl_.router_);
  }
  // @@protoc_insertion_point(copy_constructor:transport_catalogue_proto.TransportCatalogue)
}

inline void TransportCatalogue::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.catalogue_){nullptr}
    , decltype(_impl_.renderer_){nullptr}
    , decltype(_impl_.router_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

TransportCatalogue::~TransportCatalogue() {
  // @@protoc_insertion_point(destructor:transport_catalogue_proto.TransportCatalogue)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TransportCatalogue::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.catalogue_;
  if (this != internal_default_instance()) delete _impl_.renderer_;
  if (this != internal_default_instance()) delete _impl_.router_;
}

void TransportCatalogue::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TransportCatalogue::Clear() {
// @@protoc_insertion_point(message_clear_start:transport_catalogue_proto.TransportCatalogue)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.catalogue_ != nullptr) {
    delete _impl_.catalogue_;
  }
  _impl_.catalogue_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.renderer_ != nullptr) {
    delete _impl_.renderer_;
  }
  _impl_.renderer_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.router_ != nullptr) {
    delete _impl_.router_;
  }
  _impl_.router_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TransportCatalogue::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .transport_catalogue_proto.Catalogue catalogue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_catalogue(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .transport_catalogue_proto.MapRenderer renderer = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_renderer(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .transport_catalogue_proto.TransportRouter router = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_router(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TransportCatalogue::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:transport_catalogue_proto.TransportCatalogue)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .transport_catalogue_proto.Catalogue catalogue = 1;
  if (this->_internal_has_catalogue()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::catalogue(this),
        _Internal::catalogue(this).GetCachedSize(), target, stream);
  }

  // .transport_catalogue_proto.MapRenderer renderer = 2;
  if (this->_internal_has_renderer()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::renderer(this),
        _Internal::renderer(this).GetCachedSize(), target, stream);
  }

  // .transport_catalogue_proto.TransportRouter router = 3;
  if (this->_internal_has_router()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::router(this),
        _Internal::router(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:transport_catalogue_proto.TransportCatalogue)
  return target;
}

size_t TransportCatalogue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:transport_catalogue_proto.TransportCatalogue)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .transport_catalogue_proto.Catalogue catalogue = 1;
  if (this->_internal_has_catalogue()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.catalogue_);
  }

  // .transport_catalogue_proto.MapRenderer renderer = 2;
  if (this->_internal_has_renderer()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.renderer_);
  }

  // .transport_catalogue_proto.TransportRouter router = 3;
  if (this->_internal_has_router()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.router_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TransportCatalogue::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TransportCatalogue::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TransportCatalogue::GetClassData() const { return &_class_data_; }


void TransportCatalogue::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TransportCatalogue*>(&to_msg);
  auto& from = static_cast<const TransportCatalogue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:transport_catalogue_proto.TransportCatalogue)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_catalogue()) {
    _this->_internal_mutable_catalogue()->::transport_catalogue_proto::Catalogue::MergeFrom(
        from._internal_catalogue());
  }
  if (from._internal_has_renderer()) {
    _this->_internal_mutable_renderer()->::transport_catalogue_proto::MapRenderer::MergeFrom(
        from._internal_renderer());
  }
  if (from._internal_has_router()) {
    _this->_internal_mutable_router()->::transport_catalogue_proto::TransportRouter::MergeFrom(
        from._internal_router());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TransportCatalogue::CopyFrom(const TransportCatalogue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:transport_catalogue_proto.TransportCatalogue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransportCatalogue::IsInitialized() const {
  return true;
}

void TransportCatalogue::InternalSwap(TransportCatalogue* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TransportCatalogue, _impl_.router_)
      + sizeof(TransportCatalogue::_impl_.router_)
      - PROTOBUF_FIELD_OFFSET(TransportCatalogue, _impl_.catalogue_)>(
          reinterpret_cast<char*>(&_impl_.catalogue_),
          reinterpret_cast<char*>(&other->_impl_.catalogue_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TransportCatalogue::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_transport_5fcatalogue_2eproto_getter, &descriptor_table_transport_5fcatalogue_2eproto_once,
      file_level_metadata_transport_5fcatalogue_2eproto[5]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace transport_catalogue_proto
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::transport_catalogue_proto::Coordinates*
Arena::CreateMaybeMessage< ::transport_catalogue_proto::Coordinates >(Arena* arena) {
  return Arena::CreateMessageInternal< ::transport_catalogue_proto::Coordinates >(arena);
}
template<> PROTOBUF_NOINLINE ::transport_catalogue_proto::Stop*
Arena::CreateMaybeMessage< ::transport_catalogue_proto::Stop >(Arena* arena) {
  return Arena::CreateMessageInternal< ::transport_catalogue_proto::Stop >(arena);
}
template<> PROTOBUF_NOINLINE ::transport_catalogue_proto::Bus*
Arena::CreateMaybeMessage< ::transport_catalogue_proto::Bus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::transport_catalogue_proto::Bus >(arena);
}
template<> PROTOBUF_NOINLINE ::transport_catalogue_proto::StopDistanceItem*
Arena::CreateMaybeMessage< ::transport_catalogue_proto::StopDistanceItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::transport_catalogue_proto::StopDistanceItem >(arena);
}
template<> PROTOBUF_NOINLINE ::transport_catalogue_proto::Catalogue*
Arena::CreateMaybeMessage< ::transport_catalogue_proto::Catalogue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::transport_catalogue_proto::Catalogue >(arena);
}
template<> PROTOBUF_NOINLINE ::transport_catalogue_proto::TransportCatalogue*
Arena::CreateMaybeMessage< ::transport_catalogue_proto::TransportCatalogue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::transport_catalogue_proto::TransportCatalogue >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
